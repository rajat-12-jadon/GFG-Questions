class Solution {
public:
    int numEquivDominoPairs(vector<vector<int>>& dominoes) {
        int count = 0;
        map<pair<int, int>, int> freq;
        for(int i = 0; i < dominoes.size(); i++)
        {
            if(dominoes[i][0] > dominoes[i][1])
            {
                swap(dominoes[i][0], dominoes[i][1]);
            }
        }

        for (int i = 0; i < dominoes.size(); i++) 
        {
            pair<int, int> domino = {dominoes[i][0], dominoes[i][1]};
            freq[domino]++; 
        }

        for (auto it = freq.begin(); it != freq.end(); ++it) 
        {
            pair<int, int> domino = it->first;
            int frequency = it->second;
            count += frequency * (frequency - 1) / 2; 
        }
        return count;
    }
};
